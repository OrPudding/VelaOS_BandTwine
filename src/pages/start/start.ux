<template>
	<div class="container">
		<!-- 统一顶部区域样式 -->
		<div class="header" @click="backToHome">
			<text class="time time1">{{ time[0] }}</text>
			<text class="time time2">{{ time[1] }}</text>
			<text class="time time3">{{ ":" }}</text>
			<text class="time time4">{{ time[2] }}</text>
			<text class="time time5">{{ time[3] }}</text>
			<text class="pagetitle">{{ title }}</text>
		</div>

		<!-- 按钮区域 -->
		<div class="button-container">
			<div class="game-btn" @click="quickStart">
				<text class="btn-text">开始</text>
			</div>

			<div class="game-btn" @click="backToHome">
				<text class="btn-text">返回</text>
			</div>
			<div style="height: 24px"></div>
			<text class="copyright-line">Powered by BandTwine</text>
			<text class="copyright-line">{{ copyrightInfo }}</text>
			<text class="copyright-line">All Rights Reserved</text>
		</div>
	</div>
</template>

<script>
import router from "@system.router";
import metadata from "../../common/metadata.js";

export default {
	private: {
		title: "开始",
		time: [0, 0, 0, 0],
		timer: null,
		copyrightInfo: metadata.copyright,
	},

	onInit() {
		this.updateTime();
		this.timer = setInterval(() => this.updateTime(), 1000);
	},

	onDestroy() {
		if (this.timer) clearInterval(this.timer);
	},

	updateTime() {
		const now = new Date();
		const hours = now.getHours().toString().padStart(2, "0");
		const minutes = now.getMinutes().toString().padStart(2, "0");

		// 更新原有时间显示
		this.hours = hours;
		this.minutes = minutes;

		// 新增弧形时间处理：将小时和分钟拆分为单个字符
		this.time = [
			hours[0], // 小时十位
			hours[1], // 小时个位
			minutes[0], // 分钟十位
			minutes[1], // 分钟个位
		];
	},

	backToHome() {
		router.replace({
			uri: "pages/index",
		});
	},

	quickStart() {
		router.replace({
			uri: "pages/engine",
		});
	},
};
</script>

<style>
@import "../../common/comm.css";

/* 按钮容器 */
.button-container {
	margin-top: 110px;
	flex-direction: column;
	align-items: center;
}

/* 统一按钮样式 */
.game-btn {
	width: 291px;
	height: 78px;
	opacity: 1;
	border-radius: 28px;
	background-color: #262626;
	border: 3px solid rgba(255, 255, 255, 0.06);
	display: flex;
	align-items: center;
	justify-content: center;
	margin-bottom: 16px;
}

/* 按钮文字样式 */
.btn-text {
	font-size: 32px;
	font-weight: 500;
	color: #ffffff;
}

.copyright-line {
	font-size: 24px;
	color: rgba(255, 255, 255, 0.6);
	text-align: center;
}
/* 圆形设备样式 */
@media (shape: circle) {
}

/* 矩形设备样式 */
@media (shape: rect) {
	.button-container {
		margin-top: 40px;
	}
}

/* 药丸形设备样式 */
@media (shape: pill-shaped) {
	.game-btn {
		width: 192px;
	}
	.button-container {
		margin-top: 40px;
	}
	.copyright-line {
		font-size: 20px;
	}
}
</style>
